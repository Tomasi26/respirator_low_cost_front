{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-material.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/bluetooth-services/ble-scan.service.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/store/app.reducer.ts","webpack:///src/app/vent-output/constants/vent-output.constants.ts","webpack:///src/app/vent-output/service/vent-output.service.ts","webpack:///src/app/vent-output/store/vent-output.actions.ts","webpack:///src/app/vent-output/store/vent-output.effects.ts","webpack:///src/app/vent-output/store/vent-output.reducer.ts","webpack:///src/app/vent-output/store/vent-output.selectors.ts","webpack:///src/app/vent-output/store/vent-output.state.ts","webpack:///src/app/vent-output/vent-output-panel/vent-output-panel.component.ts","webpack:///src/app/vent-output/vent-output-panel/vent-output-panel.component.html","webpack:///src/app/vent-output/vent-output.component.ts","webpack:///src/app/vent-output/vent-output.component.html","webpack:///src/app/vent-output/vent-output.module.ts","webpack:///src/app/vent-output/vent-output.routing.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","material","MaterialModule","imports","AppRoutingModule","forRoot","path","redirectTo","pathMatch","loadChildren","onSameUrlNavigation","useHash","AppComponent","selector","templateUrl","styleUrls","AppModule","instrument","logOnly","production","declarations","bootstrap","BleScanService","foundDevices","document","addEventListener","bluetoothle","initialize","request","statusReceiver","initializeSuccess","handleError","result","status","console","log","error","msg","message","errorItems","service","characteristic","length","join","getElementById","innerHTML","forEach","device","addDevice","name","address","button","createElement","style","width","padding","fontSize","textContent","appendChild","providedIn","HeaderComponent","SharedModule","appReducer","VENT_OUTPUT_STORE_KEY","VentOutputService","params","dummyVentOutput","bpm","compressionPercentage","pressureAbsolute","inspiriumPressure","dummyVentOutputResponse","output","FETCH_VENT_OUTPUT","SET_VENT_OUTPUT","VENT_OUTPUT_FAILURE","VENT_OUTPUT_SUCCESS","VENT_OUTPUT_CLEAN","VENT_OUTPUT_DUMMY","FetchVentOutput","payload","type","SetVentOutput","VentOutputFailure","VentOutputSuccess","VentOutputClean","VentOutputDummy","VentOutputEffects","actions$","store","ventOutputService","fetchVentOutput","pipe","fetchVentOutputData","getVentOutput","ventOutputResponse","ventOutput","errorRes","handleVentOutputError","errorMessage","ventOutputReducer","state","action","ventOutputLoading","ventOutputError","ventOutputSuccess","successMessage","getVentOutputLoading","getVentOutputSuccess","getVentOutputError","selectVentOutputStateFeatureState","selectVentOutput","selectVentOutputLoading","selectVentOutputSuccess","selectVentOutputError","initialState","Device","VentOutputPanelComponent","router","route","ventOutputStore","bleService","devices","push","init","subscribeVentOutputStateObservables","dispatch","ventOutputSub","subscribe","ventOutputLoadingSub","ventOutputSuccessSub","ventOutputErrorSub","unsubscribe","dispatchEvent","Event","unsubscribeVentOutputStateObservables","encapsulation","None","VentOutputComponent","VentOutputModule","forFeature","routes","component","children","VentOutputRoutingModule","forChild","environment","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAuBA,QAAMC,QAAQ,GAAG,CACf;AACA;AACA;AACA,wFAJe,EAKf;AACA;AACA,4EAPe,EAQf;AACA,wEATe,EAUf,4EAVe,EAWf,uEAXe,EAYf;AACA,oFAbe,EAcf,wEAde,EAef;AACA;AACA;AACA,yEAlBe,EAmBf,uEAnBe,EAoBf,qEApBe,EAqBf,oEArBe,EAsBf;AACA,mFAvBe,EAwBf;AACA;AACA;AACA;AACA,6EA5Be,EA6Bf;AACA;AACA;AACA;AACA,yEAjCe,EAkCf,uEAlCe,EAmCf,qEAnCe,EAoCf,2EApCe,EAqCf,2EArCe,EAsCf;AACA,mFAvCe,EAwCf,oEAxCe,EAyCf,qEAzCe,EA0Cf,oEA1Ce,CAAjB;;QAuDaC,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,gBARhB,CACPD,QADO,CAQgB,EAtDzB;AACA;AACA;AACA,0FAmDyB,EAlDzB;AACA;AACA,8EAgDyB,EA/CzB;AACA,0EA8CyB,EA7CzB,4EA6CyB,EA5CzB,uEA4CyB,EA3CzB;AACA,sFA0CyB,EAzCzB,wEAyCyB,EAxCzB;AACA;AACA;AACA,2EAqCyB,EApCzB,uEAoCyB,EAnCzB,qEAmCyB,EAlCzB,oEAkCyB,EAjCzB;AACA,qFAgCyB,EA/BzB;AACA;AACA;AACA;AACA,+EA2ByB,EA1BzB;AACA;AACA;AACA;AACA,2EAsByB,EArBzB,uEAqByB,EApBzB,qEAoByB,EAnBzB,2EAmByB,EAlBzB,2EAkByB,EAjBzB;AACA,qFAgByB,EAfzB,oEAeyB,EAdzB,qEAcyB,EAbzB,oEAayB;;;;0HAAdC,c,EAAc;AAAA,kBAtDzB;AACA;AACA;AACA,4FAmDyB,EAlDzB;AACA;AACA,gFAgDyB,EA/CzB;AACA,4EA8CyB,EA7CzB,4EA6CyB,EA5CzB,uEA4CyB,EA3CzB;AACA,wFA0CyB,EAzCzB,wEAyCyB,EAxCzB;AACA;AACA;AACA,6EAqCyB,EApCzB,uEAoCyB,EAnCzB,qEAmCyB,EAlCzB,oEAkCyB,EAjCzB;AACA,uFAgCyB,EA/BzB;AACA;AACA;AACA;AACA,iFA2ByB,EA1BzB;AACA;AACA;AACA;AACA,6EAsByB,EArBzB,uEAqByB,EApBzB,qEAoByB,EAnBzB,2EAmByB,EAlBzB,2EAkByB,EAjBzB;AACA,uFAgByB,EAfzB,oEAeyB,EAdzB,qEAcyB,EAbzB,oEAayB;AAbZ,kBAzCb;AACA;AACA;AACA,4FAsCa,EArCb;AACA;AACA,gFAmCa,EAlCb;AACA,4EAiCa,EAhCb,4EAgCa,EA/Bb,uEA+Ba,EA9Bb;AACA,wFA6Ba,EA5Bb,wEA4Ba,EA3Bb;AACA;AACA;AACA,6EAwBa,EAvBb,uEAuBa,EAtBb,qEAsBa,EArBb,oEAqBa,EApBb;AACA,uFAmBa,EAlBb;AACA;AACA;AACA;AACA,iFAca,EAbb;AACA;AACA;AACA;AACA,6EASa,EARb,uEAQa,EAPb,qEAOa,EANb,2EAMa,EALb,2EAKa,EAJb;AACA,uFAGa,EAFb,oEAEa,EADb,qEACa,EAAb,oEAAa;AAaY,O;AAbZ,K;;;;;sEAaFA,c,EAAc;cAT1B,sDAS0B;eATjB;AACRC,iBAAO,EAAE,CACPF,QADO,CADD;AAKRF,iBAAO,EAAE,CACPE,QADO;AALD,S;AASiB,Q;;;;;;;;;;;;;;;;;;AC9E3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAeaG,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAXlB,CACP,6DAAaC,OAAb,CAAqB,CACnB;AAAEC,YAAI,EAAE,EAAR;AAAYC,kBAAU,EAAE,OAAxB;AAAiCC,iBAAS,EAAE;AAA5C,OADmB,EAEnB;AAAEF,YAAI,EAAE,OAAR;AAAiBG,oBAAY,EAAE;AAA/B,OAFmB,CAArB,EAIE;AAACC,2BAAmB,EAAE,QAAtB;AACEC,eAAO,EAAE;AADX,OAJF,CADO,CAWkB,EAFjB,4DAEiB;;;;0HAAhBP,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAZ5B,sDAY4B;eAZnB;AACRD,iBAAO,EAAE,CACP,6DAAaE,OAAb,CAAqB,CACnB;AAAEC,gBAAI,EAAE,EAAR;AAAYC,sBAAU,EAAE,OAAxB;AAAiCC,qBAAS,EAAE;AAA5C,WADmB,EAEnB;AAAEF,gBAAI,EAAE,OAAR;AAAiBG,wBAAY,EAAE;AAA/B,WAFmB,CAArB,EAIE;AAACC,+BAAmB,EAAE,QAAtB;AACEC,mBAAO,EAAE;AADX,WAJF,CADO,CADD;AAURZ,iBAAO,EAAE,CAAC,4DAAD;AAVD,S;AAYmB,Q;;;;;;;;;;;;;;;;;;ACf7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaa,Y;AACX,8BAAc;AAAA;AAAE;;;;mCAER,CACP;;;;;;;uBAJUA,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACVzB;;AACA;;;;;;;;;sEDSaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;AEVzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA4CaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,gBAjBX,CACP,mEADO,EAEP,iFAFO,EAGP,uEAHO,EAIP,4FAJO,EAKP,oEALO,EAMP,2DANO,EAOP,oEAPO,EAQP,mEARO,EASP,sEATO,EAUP,wDAAYX,OAAZ,CAAoB,8DAApB,CAVO,EAWP,4DAAcA,OAAd,CAAsB,EAAtB,CAXO,EAYP,yEAAoBY,UAApB,CAA+B;AAAEC,eAAO,EAAE,sEAAYC;AAAvB,OAA/B,CAZO,EAaP,+EAA4Bd,OAA5B,EAbO,CAiBW;;;;0HAATW,S,EAAS;AAAA,uBApBlB,2DAoBkB,EAnBlB,yEAmBkB;AAnBH,kBAGf,mEAHe,EAIf,iFAJe,EAKf,uEALe,EAMf,4FANe,EAOf,oEAPe,EAQf,2DARe,EASf,oEATe,EAUf,mEAVe,EAWf,sEAXe,EAWC,2DAXD,EAWC,+DAXD,EAWC,wEAXD,EAWC,8EAXD;AAmBG,O;AARF,K;;;;;sEAQPA,S,EAAS;cAtBrB,sDAsBqB;eAtBZ;AACRI,sBAAY,EAAE,CACZ,2DADY,EAEZ,yEAFY,CADN;AAKRjB,iBAAO,EAAE,CACP,mEADO,EAEP,iFAFO,EAGP,uEAHO,EAIP,4FAJO,EAKP,oEALO,EAMP,2DANO,EAOP,oEAPO,EAQP,mEARO,EASP,sEATO,EAUP,wDAAYE,OAAZ,CAAoB,8DAApB,CAVO,EAWP,4DAAcA,OAAd,CAAsB,EAAtB,CAXO,EAYP,yEAAoBY,UAApB,CAA+B;AAAEC,mBAAO,EAAE,sEAAYC;AAAvB,WAA/B,CAZO,EAaP,+EAA4Bd,OAA5B,EAbO,CALD;AAoBRgB,mBAAS,EAAE,CAAC,2DAAD;AApBH,S;AAsBY,Q;;;;;;;;;;;;;;;;;;AC5CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,c;AAIX,gCAAc;AAAA;;AAFN,aAAAC,YAAA,GAAe,EAAf;AAES;;;;+BAEV;AAAA;;AACLC,kBAAQ,CAACC,gBAAT,CAA0B,aAA1B,EAAyC,YAAM;AAC7C,gBAAIlC,OAAJ,CAAY,UAACC,OAAD,EAAa;AACvBkC,yBAAW,CAACC,UAAZ,CAAuBnC,OAAvB,EAAgC;AAACoC,uBAAO,EAAE,IAAV;AAAgBC,8BAAc,EAAE;AAAhC,eAAhC;AACD,aAFD,EAEGpC,IAFH,CAEQ,KAAI,CAACqC,iBAFb,EAEgC,KAAI,CAACC,WAFrC;AAGD,WAJD;AAKD;;;0CAEiBC,M,EAAM;AACtB,cAAIA,MAAM,CAACC,MAAP,KAAkB,SAAtB,EAAiC;AAE/BC,mBAAO,CAACC,GAAR,CAAY,uBAAZ;AACAD,mBAAO,CAACC,GAAR,CAAYH,MAAZ;AACD,WAJD,MAMK;AAEH;AAEAE,mBAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCH,MAAM,CAACC,MAAhD;AACAC,mBAAO,CAACC,GAAR,CAAYH,MAAZ,EAAoB,QAApB;AACD;AACF;;;oCACWI,K,EAAO;AACjB,cAAIC,GAAJ;;AACA,cAAID,KAAK,CAACA,KAAN,IAAeA,KAAK,CAACE,OAAzB,EAAkC;AAChC,gBAAMC,UAAU,GAAG,EAAnB;;AACA,gBAAIH,KAAK,CAACI,OAAV,EAAmB,CACjB;AACD;;AACD,gBAAIJ,KAAK,CAACK,cAAV,EAA0B,CACxB;AACD;;AACDJ,eAAG,GAAG,cAAcD,KAAK,CAACA,KAApB,GAA4B,IAA5B,GAAmCA,KAAK,CAACE,OAAzC,IAAoDC,UAAU,CAACG,MAAX,IAAsB,OAAOH,UAAU,CAACI,IAAX,CAAgB,IAAhB,CAAP,GAA+B,GAAzG,CAAN;AACD,WATD,MAUK;AACHN,eAAG,GAAGD,KAAN;AACD;;AACDF,iBAAO,CAACC,GAAR,CAAYE,GAAZ,EAAiB,OAAjB;;AACA,cAAID,KAAK,CAACA,KAAN,KAAgB,MAAhB,IAA0BA,KAAK,CAACI,OAAhC,IAA2CJ,KAAK,CAACK,cAArD,EAAqE,CACnE;AACD;AACF;;;oCAIW;AAEVP,iBAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4C,QAA5C;AAEA,eAAKZ,YAAL,GAAoB,EAApB;AAEAC,kBAAQ,CAACoB,cAAT,CAAwB,SAAxB,EAAmCC,SAAnC,GAA+C,EAA/C;AACArB,kBAAQ,CAACoB,cAAT,CAAwB,UAAxB,EAAoCC,SAApC,GAAgD,EAAhD;AACArB,kBAAQ,CAACoB,cAAT,CAAwB,QAAxB,EAAkCC,SAAlC,GAA8C,EAA9C,CARU,CAUV;AACA;AACA;AACA;AACA;AACA;AACD;;;iDAEwBb,M,EAAQ;AAC/BE,iBAAO,CAACC,GAAR,CAAY,4BAAZ;AACAD,iBAAO,CAACC,GAAR,CAAYH,MAAZ;AACAA,gBAAM,CAACc,OAAP,CAAe,UAASC,MAAT,EAAiB;AAC9B,iBAAKC,SAAL,CAAeD,MAAM,CAACE,IAAtB,EAA4BF,MAAM,CAACG,OAAnC;AACD,WAFD;AAGD;;;kCAESD,I,EAAMC,O,EAAS;AAEvB,cAAIC,MAAM,GAAG3B,QAAQ,CAAC4B,aAAT,CAAuB,QAAvB,CAAb;AACAD,gBAAM,CAACE,KAAP,CAAaC,KAAb,GAAqB,MAArB;AACAH,gBAAM,CAACE,KAAP,CAAaE,OAAb,GAAuB,MAAvB;AACAJ,gBAAM,CAACE,KAAP,CAAaG,QAAb,GAAwB,MAAxB;AACAL,gBAAM,CAACM,WAAP,GAAqBR,IAAI,GAAG,IAAP,GAAcC,OAAnC;AAEAC,gBAAM,CAAC1B,gBAAP,CAAwB,OAAxB,EAAiC;AAE/BD,oBAAQ,CAACoB,cAAT,CAAwB,UAAxB,EAAoCC,SAApC,GAAgD,EAAhD,CAF+B,CAG/B;AACD,WAJD;AAMArB,kBAAQ,CAACoB,cAAT,CAAwB,SAAxB,EAAmCc,WAAnC,CAA+CP,MAA/C;AACD;;;;;;;uBA7FU7B,c;AAAc,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVqC,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;ACL3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,e;AACX,iCAAc;AAAA;AAAE;;;;mCAEL,CAEV;;;sCAEU,CAAW;;;;;;;uBAPXA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,6H;AAAA;AAAA;ACP5B;;AACE;;AACE;;AAAI;;AAAQ;;AACd;;AAGA;;AACF;;;;;;;;;sEDAaA,e,EAAe;cAL3B,uDAK2B;eALjB;AACT/C,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAca8C,Y;;;;;YAAAA;;;;yBAAAA,Y;AAAY,O;AAAA,gBAPd,CACP,4DADO,CAOc,EAHrB,4DAGqB;;;;0HAAZA,Y,EAAY;AAAA,kBANrB,4DAMqB;AANT,kBAGZ,4DAHY;AAMS,O;AAHT,K;;;;;sEAGHA,Y,EAAY;cAVxB,sDAUwB;eAVf;AACRzC,sBAAY,EAAE,EADN;AAGRjB,iBAAO,EAAE,CACP,4DADO,CAHD;AAMRJ,iBAAO,EAAE,CACP,4DADO;AAND,S;AAUe,Q;;;;;;;;;;;;;;;;;;ACRzB;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAM+D,UAAU,GAA+B,EAA/C;;;;;;;;;;;;;;;;ACNP;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAMC,qBAAqB,GAAG,cAA9B;;;;;;;;;;;;;;;;ACAP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYaC,iB;AAEX,mCAAc;AAAA;AAAE;;;;sCAEKC,M,EAAwB;AAE3C,cAAMC,eAAe,GAAe;AAClCC,eAAG,EAAE,KAD6B;AAElCC,iCAAqB,EAAE,wBAFW;AAGlCC,4BAAgB,EAAE,mBAHgB;AAIlCC,6BAAiB,EAAE;AAJe,WAApC;AAOA,cAAMC,uBAAuB,GAAuB;AAClDC,kBAAM,EAAEN;AAD0C,WAApD;AAIA,iBAAO,gDAAGK,uBAAH,CAAP;AACD;;;;;;;uBAlBUP,iB;AAAiB,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACVL,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;ACN9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;;;AACO,QAAMc,iBAAiB,GAAG,+BAA1B;AACA,QAAMC,eAAe,GAAG,6BAAxB;AACA,QAAMC,mBAAmB,GAAG,iCAA5B;AACA,QAAMC,mBAAmB,GAAG,iCAA5B;AACA,QAAMC,iBAAiB,GAAG,+BAA1B;AACA,QAAMC,iBAAiB,GAAG,+BAA1B,C,CAEP;;QACaC,e,GAGX,yBAAmBC,OAAnB,EAEG;AAAA;;AAFgB,WAAAA,OAAA,GAAAA,OAAA;AAFV,WAAAC,IAAA,GAAOR,iBAAP;AAIJ,K;;QAGMS,a,GAGX,uBAAmBF,OAAnB,EAEG;AAAA;;AAFgB,WAAAA,OAAA,GAAAA,OAAA;AAFV,WAAAC,IAAA,GAAOP,eAAP;AAIJ,K;;QAGMS,iB,GAGX,2BAAmBH,OAAnB,EAAqD;AAAA;;AAAlC,WAAAA,OAAA,GAAAA,OAAA;AAFV,WAAAC,IAAA,GAAON,mBAAP;AAE8C,K;;QAG5CS,iB,GAGX,2BAAmBJ,OAAnB,EAAuD;AAAA;;AAApC,WAAAA,OAAA,GAAAA,OAAA;AAFV,WAAAC,IAAA,GAAOL,mBAAP;AAEgD,K;;QAG9CS,e,GAAb;AAAA;;AACW,WAAAJ,IAAA,GAAOJ,iBAAP;AACV,K,EAED;;;QACaS,e,GAAb;AAAA;;AACW,WAAAL,IAAA,GAAOH,iBAAP;AACV,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QClCYS,iB;AA+BX,iCACUC,QADV,EAEUC,KAFV,EAGUC,iBAHV,EAG8C;AAAA;;AAAA;;AAFpC,aAAAF,QAAA,GAAAA,QAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAAC,iBAAA,GAAAA,iBAAA,CAAoC,CAhC9C;;AAEA,aAAAC,eAAA,GAAkB,KAAKH,QAAL,CAAcI,IAAd,CAChB,6DAAO,sEAAP,CADgB,EAEhB,iEAAU,UAACC,mBAAD,EAA4D;AAEpE,iBAAO,MAAI,CAACH,iBAAL,CAAuBI,aAAvB,CAAqCD,mBAAmB,CAACb,OAApB,CAA4Bf,MAAjE,EACJ2B,IADI,CAEH,iEAAU,UAACG,kBAAD,EAA4C;AAEpD,gBAAIA,kBAAkB,CAACvB,MAAvB,EAA+B;AAC7B,qBAAO,gDAAGuB,kBAAkB,CAACvB,MAAtB,CAAP;AACD,aAFD,MAEO;AACL,qBAAO,wDAAW,2BAAX,CAAP;AACD;AACF,WAPD,CAFG,EAUH,2DAAI,UAAAwB,UAAU,EAAI;AAChB,mBAAO,IAAI,kEAAJ,CAAoC;AACzCxB,oBAAM,EAAEwB;AADiC,aAApC,CAAP;AAGD,WAJD,CAVG,EAeH,kEAAW,UAAAC,QAAQ,EAAI;AACrB,mBAAO,MAAI,CAACC,qBAAL,CAA2BD,QAA3B,CAAP;AACD,WAFD,CAfG,CAAP;AAmBD,SArBD,CAFgB,CAAlB;AA+BI;;;;8CAG0B7D,K,EAAY;AACxC,iBAAO,gDAAG,IAAI,sEAAJ,CAAwC;AAChD+D,wBAAY,EAAE/D;AADkC,WAAxC,CAAH,CAAP;AAGD;;;;;;;uBA1CUmD,iB,EAAiB,6G,EAAA,yG,EAAA,sI;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB;;AAI5B,8DADC,8DACD,G,2BAAA,E,iBAAA,E,MAAA;;;;sEAJWA,iB,EAAiB;cAD7B;AAC6B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChB9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIO,aAASa,iBAAT,GAA8F;AAAA,UAAnEC,KAAmE,uEAA3D,+DAA2D;AAAA,UAA7CC,MAA6C;;AACnG,cAAQA,MAAM,CAACrB,IAAf;AACE,aAAK,sEAAL;AACE,iBAAO,MAAP,OAAO,CAAP,kBACKoB,KADL,CAAO,EACG;AACRL,sBAAU,EAAE,IADJ;AAERO,6BAAiB,EAAE,IAFX;AAGRC,2BAAe,EAAE,IAHT;AAIRC,6BAAiB,EAAE;AAJX,WADH,CAAP;;AAOF,aAAK,oEAAL;AACE,iBAAO,MAAP,OAAO,CAAP,kBACKJ,KADL,CAAO,EACG;AACRL,sBAAU,EAAEM,MAAM,CAACtB,OAAP,CAAeR,MADnB;AAER+B,6BAAiB,EAAE,KAFX;AAGRC,2BAAe,EAAE,IAHT;AAIRC,6BAAiB,EAAE;AAJX,WADH,CAAP;;AAOF,aAAK,wEAAL;AACE,iBAAO,MAAP,OAAO,CAAP,kBACKJ,KADL,CAAO,EACG;AACRE,6BAAiB,EAAE,KADX;AAERC,2BAAe,EAAEF,MAAM,CAACtB,OAAP,CAAemB,YAFxB;AAGRM,6BAAiB,EAAE;AAHX,WADH,CAAP;;AAMF,aAAK,wEAAL;AACE,iBAAO,MAAP,OAAO,CAAP,kBACKJ,KADL,CAAO,EACG;AACRE,6BAAiB,EAAE,KADX;AAERC,2BAAe,EAAE,IAFT;AAGRC,6BAAiB,EAAEH,MAAM,CAACtB,OAAP,CAAe0B;AAH1B,WADH,CAAP;;AAMF,aAAK,sEAAL;AACE,iBAAO,MAAP,OAAO,CAAP,kBACKL,KADL,CAAO,EACG;AACRL,sBAAU,EAAE,IADJ;AAERO,6BAAiB,EAAE,KAFX;AAGRC,2BAAe,EAAE,IAHT;AAIRC,6BAAiB,EAAE;AAJX,WADH,CAAP;;AAOF;AACE,iBAAOJ,KAAP;AAxCJ;AA0CD;;;;;;;;;;;;;;;;;AC/CD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,gE,CAUA;;;AACA,QAAMP,aAAa,GAAG,SAAhBA,aAAgB,CAACO,KAAD;AAAA,aAAwCA,KAAK,CAACL,UAA9C;AAAA,KAAtB;;AAEA,QAAMW,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACN,KAAD;AAAA,aAAqCA,KAAK,CAACE,iBAA3C;AAAA,KAA7B;;AAEA,QAAMK,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACP,KAAD;AAAA,aAAqCA,KAAK,CAACI,iBAA3C;AAAA,KAA7B;;AAEA,QAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACR,KAAD;AAAA,aAAqCA,KAAK,CAACG,eAA3C;AAAA,KAA3B,C,CAEA;;;AACO,QAAMM,iCAAiC,GAGxC,0EAAuC,sFAAvC,CAHC,C,CAKP;;AACO,QAAMC,gBAAgB,GAGvB,mEACJD,iCADI,EAEJhB,aAFI,CAHC;AAQA,QAAMkB,uBAAuB,GAG9B,mEACJF,iCADI,EAEJH,oBAFI,CAHC;AAQA,QAAMM,uBAAuB,GAG9B,mEACJH,iCADI,EAEJF,oBAFI,CAHC;AAQA,QAAMM,qBAAqB,GAG5B,mEACJJ,iCADI,EAEJD,kBAFI,CAHC;;;;;;;;;;;;;;;;ACxCP;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAMM,YAAY,GAAoB;AAC3CnB,gBAAU,EAAE,IAD+B;AAE3CO,uBAAiB,EAAE,KAFwB;AAG3CC,qBAAe,EAAE,IAH0B;AAI3CC,uBAAiB,EAAE;AAJwB,KAAtC;;;;;;;;;;;;;;;;ACVP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,4E,CAAA;AAaA;;;;;ACNM;;AACE;;AAAW;;AAAe;;AAC5B;;;;;;AADa;;AAAA;;MDsBnB;;;QACMW,M,GAEJ,gBAAYnE,IAAZ,EAA0B;AAAA;;AACxB,WAAKA,IAAL,GAAYA,IAAZ;AACD,K;;QAUUoE,wB;AAeX,wCACUC,MADV,EAEUC,KAFV,EAGU9B,KAHV,EAIU+B,eAJV,EAKUC,UALV,EAKsC;AAAA;;AAJ5B,aAAAH,MAAA,GAAAA,MAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAA9B,KAAA,GAAAA,KAAA;AACA,aAAA+B,eAAA,GAAAA,eAAA;AACA,aAAAC,UAAA,GAAAA,UAAA;AAfV,aAAAlB,iBAAA,GAAoB,KAApB;AACA,aAAAC,eAAA,GAA2B,IAA3B;AACA,aAAAC,iBAAA,GAA6B,IAA7B;AAKA,aAAAiB,OAAA,GAAoB,EAApB;AAUE,aAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAIP,MAAJ,CAAW,gBAAX,CAAlB;AACD;;;;mCAGU;AACT;AACA,eAAKK,UAAL,CAAgBG,IAAhB,GAFS,CAIT;AAEA;;AACA,eAAKC,mCAAL,GAPS,CAST;;AACA,eAAKpC,KAAL,CAAWqC,QAAX,CAAoB,IAAI,wEAAJ,CAAwC;AAC1DtD,kBAAM,EAAE;AACNL,iBAAG,EAAE,KADC;AAENE,8BAAgB,EAAE,mBAFZ;AAGND,mCAAqB,EAAE,wBAHjB;AAINE,+BAAiB,EAAE;AAJb;AADkD,WAAxC,CAApB;AAQD,S,CAED;;;;8DACsC;AAAA;;AAEpC;AACA,eAAKyD,aAAL,GAAqB,KAAKP,eAAL,CAAqB5B,IAArB,CACnB,2DAAO,6EAAP,CADmB,EAEnBoC,SAFmB,CAET,UAAAhC,UAAU,EAAI;AACxB,kBAAI,CAACA,UAAL,GAAkBA,UAAlB;AACD,WAJoB,CAArB,CAHoC,CASpC;;AACA,eAAKiC,oBAAL,GAA4B,KAAKT,eAAL,CAAqB5B,IAArB,CAC1B,2DAAO,oFAAP,CAD0B,EAE1BoC,SAF0B,CAEhB,UAAAzB,iBAAiB,EAAI;AAC/B,kBAAI,CAACA,iBAAL,GAAyBA,iBAAzB;AACD,WAJ2B,CAA5B,CAVoC,CAgBpC;;AACA,eAAK2B,oBAAL,GAA4B,KAAKV,eAAL,CAAqB5B,IAArB,CAC1B,2DAAO,oFAAP,CAD0B,EAE1BoC,SAF0B,CAEhB,UAAAvB,iBAAiB,EAAI;AAC/B,kBAAI,CAACA,iBAAL,GAAyBA,iBAAzB;AACD,WAJ2B,CAA5B,CAjBoC,CAuBpC;;AACA,eAAK0B,kBAAL,GAA0B,KAAKX,eAAL,CAAqB5B,IAArB,CACxB,2DAAO,kFAAP,CADwB,EAExBoC,SAFwB,CAEd,UAAAxB,eAAe,EAAI;AAC7B,kBAAI,CAACA,eAAL,GAAuBA,eAAvB;AACD,WAJyB,CAA1B;AAMD;;;gEAEuC;AAEtC,cAAI,KAAKuB,aAAT,EAAwB;AACtB,iBAAKA,aAAL,CAAmBK,WAAnB;AACD;;AACD,cAAI,KAAKH,oBAAT,EAA8B;AAC5B,iBAAKA,oBAAL,CAA0BG,WAA1B;AACD;;AACD,cAAI,KAAKF,oBAAT,EAA8B;AAC5B,iBAAKA,oBAAL,CAA0BE,WAA1B;AACD;;AACD,cAAI,KAAKD,kBAAT,EAA4B;AAC1B,iBAAKA,kBAAL,CAAwBC,WAAxB;AACD;AAEF;;;0CAGiB;AAChB5G,kBAAQ,CAAC6G,aAAT,CAAuB,IAAIC,KAAJ,CAAU,aAAV,CAAvB;AACD;;;6CAEoB,CACpB;;;sCAEa;AACZ;AACA,eAAKC,qCAAL;AACD;;;oCAEQ,CAER;;;;;;;uBA/GUlB,wB,EAAwB,uH,EAAA,+H,EAAA,kH,EAAA,kH,EAAA,oJ;AAAA,K;;;YAAxBA,wB;AAAwB,4C;AAAA,e;AAAA,a;AAAA,wG;AAAA;AAAA;AC5CrC;;AACE;;AACE;;AAGA;;AACE;;AAGF;;AACA;;AACE;;AAAmB;;AAAO;;AAC1B;;AAAmB;AAAA,mBAAS,eAAT;AAAyB,WAAzB;;AAA2B;;AAAO;;AACrD;;AAAmB;;AAAO;;AAC5B;;AACF;;AAEF;;;;AAXS;;AAAA;;;;;;;;;;sEDsCIA,wB,EAAwB;cANpC,uDAMoC;eAN1B;AACTxG,kBAAQ,EAAE,uBADD;AAETE,mBAAS,EAAE,CAAC,kCAAD,CAFF;AAGTD,qBAAW,EAAE,kCAHJ;AAIT0H,uBAAa,EAAE,gEAAkBC;AAJxB,S;AAM0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE7CrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,mB;AAEX,qCAAc;AAAA;AAAG;;;;mCAEN,CACV;;;;;;;uBALUA,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,sC;AAAA,c;AAAA,a;AAAA,4C;AAAA;AAAA;ACPhC;;AACE;;AACE;;AACF;;AACF;;;;;;;;;sEDGaA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACT7H,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;AEPhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAmCa4H,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAlBlB,CACP,4DADO,EAEP,kEAFO,EAGP,qEAHO,EAIP,mFAJO,EAKP,mEALO,EAMP,wDAAYC,UAAZ,CAAuB,uFAAvB,EAA8C,6EAA9C,CANO,EAOP,4DAAcA,UAAd,CAAyB,CAAC,6EAAD,CAAzB,CAPO,CAkBkB;;;;0HAAhBD,gB,EAAgB;AAAA,uBALzB,0EAKyB,EAJzB,uGAIyB;AAJD,kBAbxB,4DAawB,EAZxB,kEAYwB,EAXxB,qEAWwB,EAVxB,mFAUwB,EATxB,mEASwB,EATV,8DASU,EATV,kEASU,CAIC;AAbX,kBAKd,uGALc;AAaW,O;AARD,K;;;;;sEAQfA,gB,EAAgB;cAnB5B,sDAmB4B;eAnBnB;AACRxI,iBAAO,EAAE,CACP,4DADO,EAEP,kEAFO,EAGP,qEAHO,EAIP,mFAJO,EAKP,mEALO,EAMP,wDAAYyI,UAAZ,CAAuB,uFAAvB,EAA8C,6EAA9C,CANO,EAOP,4DAAcA,UAAd,CAAyB,CAAC,6EAAD,CAAzB,CAPO,CADD;AAUR7I,iBAAO,EAAE,CACP,uGADO,CAVD;AAaRqB,sBAAY,EAAE,CACZ,0EADY,EAEZ,uGAFY;AAbN,S;AAmBmB,Q;;;;;;;;;;;;;;;;;;ACnC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMyH,MAAM,GAAW,CACrB;AACEvI,UAAI,EAAE,EADR;AAEEwI,eAAS,EAAE,0EAFb;AAGEC,cAAQ,EAAE,CACR;AAAEzI,YAAI,EAAE,EAAR;AACEwI,iBAAS,EAAE;AADb,OADQ;AAHZ,KADqB,CAAvB;;QAmBaE,uB;;;;;YAAAA;;;;yBAAAA,uB;AAAuB,O;AAAA,gBALzB,CACP,6DAAaC,QAAb,CAAsBJ,MAAtB,CADO,CAKyB,EAFxB,4DAEwB;;;;0HAAvBG,uB,EAAuB;AAAA;AAAA,kBAFxB,4DAEwB;AAAA,O;AAFZ,K;;;;;sEAEXA,uB,EAAuB;cANnC,sDAMmC;eAN1B;AACR7I,iBAAO,EAAE,CACP,6DAAa8I,QAAb,CAAsBJ,MAAtB,CADO,CADD;AAIR9I,iBAAO,EAAE,CAAC,4DAAD;AAJD,S;AAM0B,Q;;;;;;;;;;;;;;;;;;ACxBpC;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMmJ,WAAW,GAAG;AACzB/H,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBgI,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIlH,OAAO,CAACE,KAAR,CAAcgH,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\n\r\n\r\nconst material = [\r\n  // DragDropModule,\r\n  // CdkTableModule,\r\n  // CdkTreeModule,\r\n  MatAutocompleteModule,\r\n  // MatBadgeModule,\r\n  // MatBottomSheetModule,\r\n  MatButtonModule,\r\n  // MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  // MatStepperModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  // MatDividerModule,\r\n  // MatExpansionModule,\r\n  // MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  // MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  // MatProgressBarModule,\r\n  // MatProgressSpinnerModule,\r\n  // MatRadioModule,\r\n  // MatRippleModule,\r\n  MatSelectModule,\r\n  // MatSidenavModule,\r\n  // MatSliderModule,\r\n  // MatSlideToggleModule,\r\n  // MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  // MatTreeModule,\r\n  MatFormFieldModule,\r\n  MatCardModule,\r\n  FlexLayoutModule,\r\n  MatMenuModule\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    material\r\n  ],\r\n\r\n  exports: [\r\n    material\r\n  ]\r\n})\r\nexport class MaterialModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot([\r\n      { path: '', redirectTo: '/vent', pathMatch: 'full' },\r\n      { path: 'admin', loadChildren: './admin/admin.module#AdminModule'}\r\n      ],\r\n      {onSameUrlNavigation: 'reload',\r\n        useHash: true}\r\n    )\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Store} from '@ngrx/store';\r\n\r\nimport * as fromApp from './store/app.reducer';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { environment } from '../environments/environment';\r\n\r\nimport {StoreModule} from '@ngrx/store';\r\nimport {EffectsModule} from '@ngrx/effects';\r\nimport {StoreRouterConnectingModule} from '@ngrx/router-store';\r\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\r\nimport * as fromApp from './store/app.reducer';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport { MaterialModule } from './app-material.module';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport {SharedModule} from './shared/shared.module';\r\nimport {VentOutputModule} from './vent-output/vent-output.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    VentOutputModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    StoreModule.forRoot(fromApp.appReducer),\r\n    EffectsModule.forRoot([]),\r\n    StoreDevtoolsModule.instrument({ logOnly: environment.production }),\r\n    StoreRouterConnectingModule.forRoot(),\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BleScanService {\n\n  private foundDevices = [];\n\n  constructor() { }\n\n  init() {\n    document.addEventListener('deviceready', () => {\n      new Promise((resolve) => {\n        bluetoothle.initialize(resolve, {request: true, statusReceiver: false});\n      }).then(this.initializeSuccess, this.handleError);\n    });\n  }\n\n  initializeSuccess(result){\n    if (result.status === 'enabled') {\n\n      console.log('Bluetooth is enabled.');\n      console.log(result);\n    }\n\n    else {\n\n      // document.getElementById('start-scan').disabled = true;\n\n      console.log('Bluetooth is not enabled:', result.status);\n      console.log(result, 'status');\n    }\n  }\n  handleError(error) {\n    let msg;\n    if (error.error && error.message) {\n      const errorItems = [];\n      if (error.service) {\n        // errorItems.push('service: ' + (uuids[error.service] || error.service));\n      }\n      if (error.characteristic) {\n        // errorItems.push('characteristic: ' + (uuids[error.characteristic] || error.characteristic));\n      }\n      msg = 'Error on ' + error.error + ': ' + error.message + (errorItems.length && (' (' + errorItems.join(', ') + ')'));\n    }\n    else {\n      msg = error;\n    }\n    console.log(msg, 'error');\n    if (error.error === 'read' && error.service && error.characteristic) {\n      // reportValue(error.service, error.characteristic, 'Error: ' + error.message);\n    }\n  }\n\n\n\n  startScan() {\n\n    console.log('Starting scan for devices...', 'status');\n\n    this.foundDevices = [];\n\n    document.getElementById('devices').innerHTML = '';\n    document.getElementById('services').innerHTML = '';\n    document.getElementById('output').innerHTML = '';\n\n    // if (window.cordova.platformId === 'windows') {\n    //   bluetoothle.retrieveConnected(this.retrieveConnectedSuccess, this.handleError, {});\n    // }\n    // else {\n    //   bluetoothle.startScan(this.startScanSuccess, this.handleError, { services: [] });\n    // }\n  }\n\n  retrieveConnectedSuccess(result) {\n    console.log('retrieveConnectedSuccess()');\n    console.log(result);\n    result.forEach(function(device) {\n      this.addDevice(device.name, device.address);\n    });\n  }\n\n  addDevice(name, address) {\n\n    let button = document.createElement('button');\n    button.style.width = '100%';\n    button.style.padding = '10px';\n    button.style.fontSize = '16px';\n    button.textContent = name + ': ' + address;\n\n    button.addEventListener('click', function() {\n\n      document.getElementById('services').innerHTML = '';\n      // connect(address);\n    });\n\n    document.getElementById('devices').appendChild(button);\n  }\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n}\r\n","<mat-toolbar class=\"flex-container\">\r\n  <div id=\"logo-group\" routerLink=\"/admin/vent\">\r\n    <h4>AmbuVent</h4>\r\n  </div>\r\n\r\n  <!-- This fills the remaining space of the current row -->\r\n  <span class=\"example-fill-remaining-space\"></span>\r\n</mat-toolbar>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    CommonModule,\n  ]\n})\nexport class SharedModule {}\n","import { ActionReducerMap } from '@ngrx/store';\n\n// tslint:disable-next-line:no-empty-interface\nexport interface AppState {\n}\n\nexport const appReducer: ActionReducerMap<AppState> = {\n};\n","export const VENT_OUTPUT_STORE_KEY = '/vent-output';\r\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  VentOutputParams,\n  VentOutputResponse\n} from '../interfaces/vent-output.interfaces';\nimport {VentOutput} from '../model/vent-output.model';\nimport {of, throwError} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VentOutputService {\n\n  constructor() {}\n\n  public getVentOutput(params: VentOutputParams): Observable<VentOutputResponse> {\n\n    const dummyVentOutput: VentOutput = {\n      bpm: 'BPM',\n      compressionPercentage: 'COMPRESSION_PERCENTAGE',\n      pressureAbsolute: 'PRESSURE_ABSOLUTE',\n      inspiriumPressure: 'INSPIRIUM_PRESSURE'\n    };\n\n    const dummyVentOutputResponse: VentOutputResponse = {\n      output: dummyVentOutput\n    };\n\n    return of(dummyVentOutputResponse);\n  }\n\n}\n","import { Action } from '@ngrx/store';\n\nimport { VentOutput } from '../model/vent-output.model';\nimport {VentOutputParams, VentOutputResponse} from '../interfaces/vent-output.interfaces';\nimport {Message} from '../../messages/message.model';\n\n// vent output\nexport const FETCH_VENT_OUTPUT = '[VentOutput] Fetch VentOutput';\nexport const SET_VENT_OUTPUT = '[VentOutput] Set VentOutput';\nexport const VENT_OUTPUT_FAILURE = '[VentOutput] VentOutput Failure';\nexport const VENT_OUTPUT_SUCCESS = '[VentOutput] VentOutput Success';\nexport const VENT_OUTPUT_CLEAN = '[VentOutput] VentOutput Clean';\nexport const VENT_OUTPUT_DUMMY = '[VentOutput] VentOutput Dummy';\n\n// vent output actions\nexport class FetchVentOutput implements Action {\n  readonly type = FETCH_VENT_OUTPUT;\n\n  constructor(public payload: {\n    params: VentOutputParams\n  }) {}\n}\n\nexport class SetVentOutput implements Action {\n  readonly type = SET_VENT_OUTPUT;\n\n  constructor(public payload: {\n    output: VentOutput\n  }) {}\n}\n\nexport class VentOutputFailure implements Action {\n  readonly type = VENT_OUTPUT_FAILURE;\n\n  constructor(public payload: {errorMessage: Message}) {}\n}\n\nexport class VentOutputSuccess implements Action {\n  readonly type = VENT_OUTPUT_SUCCESS;\n\n  constructor(public payload: {successMessage: Message}) {}\n}\n\nexport class VentOutputClean implements Action {\n  readonly type = VENT_OUTPUT_CLEAN;\n}\n\n// dummy\nexport class VentOutputDummy implements Action {\n  readonly type = VENT_OUTPUT_DUMMY;\n}\n\nexport type VentOutputActions =\n    | FetchVentOutput\n    | SetVentOutput\n    | VentOutputFailure\n    | VentOutputSuccess\n    | VentOutputClean\n    | VentOutputDummy\n  ;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {switchMap, map, catchError} from 'rxjs/operators';\n\nimport * as VentOutputActions from './vent-output.actions';\nimport * as fromApp from '../../store/app.reducer';\nimport {of, throwError} from 'rxjs';\nimport {VentOutputService} from '../service/vent-output.service';\nimport {\n  VentOutputResponse,\n  VentOutputParams\n} from '../interfaces/vent-output.interfaces';\n\n\n@Injectable()\nexport class VentOutputEffects {\n\n  // read\n  @Effect()\n  fetchVentOutput = this.actions$.pipe(\n    ofType(VentOutputActions.FETCH_VENT_OUTPUT),\n    switchMap((fetchVentOutputData: VentOutputActions.FetchVentOutput) => {\n\n      return this.ventOutputService.getVentOutput(fetchVentOutputData.payload.params)\n        .pipe(\n          switchMap((ventOutputResponse: VentOutputResponse) => {\n\n            if (ventOutputResponse.output) {\n              return of(ventOutputResponse.output);\n            } else {\n              return throwError('Error Getting Vent Output');\n            }\n          }),\n          map(ventOutput => {\n            return new VentOutputActions.SetVentOutput({\n              output: ventOutput\n            });\n          }),\n          catchError(errorRes => {\n            return this.handleVentOutputError(errorRes);\n          })\n        );\n    })\n  );\n\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<fromApp.AppState>,\n    private ventOutputService: VentOutputService\n  ) {}\n\n\n  private handleVentOutputError(error: any) {\n    return of(new VentOutputActions.VentOutputFailure({\n      errorMessage: error\n    }));\n  }\n\n}\n","import * as VentOutputActions from './vent-output.actions';\nimport { initialState, VentOutputState } from './vent-output.state';\n\n\nexport function ventOutputReducer(state = initialState, action: VentOutputActions.VentOutputActions) {\n  switch (action.type) {\n    case VentOutputActions.FETCH_VENT_OUTPUT:\n      return {\n        ...state,\n        ventOutput: null,\n        ventOutputLoading: true,\n        ventOutputError: null,\n        ventOutputSuccess: null\n      };\n    case VentOutputActions.SET_VENT_OUTPUT:\n      return {\n        ...state,\n        ventOutput: action.payload.output,\n        ventOutputLoading: false,\n        ventOutputError: null,\n        ventOutputSuccess: null\n      };\n    case VentOutputActions.VENT_OUTPUT_FAILURE:\n      return {\n        ...state,\n        ventOutputLoading: false,\n        ventOutputError: action.payload.errorMessage,\n        ventOutputSuccess: null\n      };\n    case VentOutputActions.VENT_OUTPUT_SUCCESS:\n      return {\n        ...state,\n        ventOutputLoading: false,\n        ventOutputError: null,\n        ventOutputSuccess: action.payload.successMessage\n      };\n    case VentOutputActions.VENT_OUTPUT_CLEAN:\n      return {\n        ...state,\n        ventOutput: null,\n        ventOutputLoading: false,\n        ventOutputError: null,\n        ventOutputSuccess: null\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  createFeatureSelector,\n  createSelector,\n  MemoizedSelector\n} from '@ngrx/store';\nimport {VentOutputState} from './vent-output.state';\nimport {VENT_OUTPUT_STORE_KEY} from '../constants/vent-output.constants';\nimport {Message} from '../../messages/message.model';\nimport {VentOutput} from '../model/vent-output.model';\n\n// vent output selectors helpers\nconst getVentOutput = (state: VentOutputState): VentOutput => state.ventOutput;\n\nconst getVentOutputLoading = (state: VentOutputState): boolean => state.ventOutputLoading;\n\nconst getVentOutputSuccess = (state: VentOutputState): Message => state.ventOutputSuccess;\n\nconst getVentOutputError = (state: VentOutputState): Message => state.ventOutputError;\n\n// vent output feature selectors\nexport const selectVentOutputStateFeatureState: MemoizedSelector<\n  object,\n  VentOutputState\n  > = createFeatureSelector<VentOutputState>(VENT_OUTPUT_STORE_KEY);\n\n// vent output selectors\nexport const selectVentOutput: MemoizedSelector<\n  object,\n  VentOutput\n  > = createSelector(\n  selectVentOutputStateFeatureState,\n  getVentOutput\n);\n\nexport const selectVentOutputLoading: MemoizedSelector<\n  object,\n  boolean\n  > = createSelector(\n  selectVentOutputStateFeatureState,\n  getVentOutputLoading\n);\n\nexport const selectVentOutputSuccess: MemoizedSelector<\n  object,\n  Message\n  > = createSelector(\n  selectVentOutputStateFeatureState,\n  getVentOutputSuccess\n);\n\nexport const selectVentOutputError: MemoizedSelector<\n  object,\n  Message\n  > = createSelector(\n  selectVentOutputStateFeatureState,\n  getVentOutputError\n);\n","import {VentOutput} from '../model/vent-output.model';\nimport {Message} from '../../messages/message.model';\n\nexport interface VentOutputState {\n  ventOutput: VentOutput;\n  ventOutputLoading: boolean;\n  ventOutputError: Message;\n  ventOutputSuccess: Message;\n}\n\nexport const initialState: VentOutputState = {\n  ventOutput: null,\n  ventOutputLoading: false,\n  ventOutputError: null,\n  ventOutputSuccess: null\n};\n","// core\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\n\n// router\nimport {ActivatedRoute, Router} from '@angular/router';\n\n// store\nimport {select, Store} from '@ngrx/store';\nimport * as fromApp from '../../store/app.reducer';\nimport * as fromVentOutputState from '../store/vent-output.state';\nimport * as fromVentOutputActions from '../store/vent-output.actions';\nimport * as fromVentOutputSelectors from '../store/vent-output.selectors';\n\n// rxjs\nimport {Subscription} from 'rxjs';\n\n// vent output\nimport {VentOutput} from '../model/vent-output.model';\n\n// message\nimport {Message} from '../../messages/message.model';\nimport {BleScanService} from '../../bluetooth-services/ble-scan.service';\n\n// tslint:disable-next-line:component-class-suffix\nclass Device{\n  name: string;\n  constructor(name: string) {\n    this.name = name;\n  }\n}\n\n\n@Component({\n  selector: 'app-vent-output-panel',\n  styleUrls: ['vent-output-panel.component.scss'],\n  templateUrl: 'vent-output-panel.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class VentOutputPanelComponent implements OnInit, AfterViewInit, AfterContentInit, OnDestroy {\n\n\n  // vent output store\n  ventOutput: VentOutput;\n  ventOutputLoading = false;\n  ventOutputError: Message = null;\n  ventOutputSuccess: Message = null;\n  ventOutputSub: Subscription;\n  ventOutputLoadingSub: Subscription;\n  ventOutputErrorSub: Subscription;\n  ventOutputSuccessSub: Subscription;\n  devices: Device[] = [];\n\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private store: Store<fromApp.AppState>,\n    private ventOutputStore: Store<fromVentOutputState.VentOutputState>,\n    private bleService: BleScanService) {\n\n    this.devices.push(new Device('Tomer\\'s Phone'));\n  }\n\n\n  ngOnInit() {\n    //init bluetooth module\n    this.bleService.init();\n\n    // document.dispatchEvent(new Event('deviceready'));\n\n    // subscribe to vent output state\n    this.subscribeVentOutputStateObservables();\n\n    // setting example values for the vent outputs\n    this.store.dispatch(new fromVentOutputActions.SetVentOutput({\n      output: {\n        bpm: 'BPM',\n        pressureAbsolute: 'PRESSURE_ABSOLUTE',\n        compressionPercentage: 'COMPRESSION_PERCENTAGE',\n        inspiriumPressure: 'INSPIRIUM_PRESSURE'\n      }\n    }));\n  }\n\n  // vent output state\n  subscribeVentOutputStateObservables() {\n\n    // vent output\n    this.ventOutputSub = this.ventOutputStore.pipe(\n      select(fromVentOutputSelectors.selectVentOutput)\n    ).subscribe(ventOutput => {\n      this.ventOutput = ventOutput;\n    });\n\n    // loading\n    this.ventOutputLoadingSub = this.ventOutputStore.pipe(\n      select(fromVentOutputSelectors.selectVentOutputLoading)\n    ).subscribe(ventOutputLoading => {\n      this.ventOutputLoading = ventOutputLoading;\n    });\n\n    // success message\n    this.ventOutputSuccessSub = this.ventOutputStore.pipe(\n      select(fromVentOutputSelectors.selectVentOutputSuccess)\n    ).subscribe(ventOutputSuccess => {\n      this.ventOutputSuccess = ventOutputSuccess;\n    });\n\n    // error message\n    this.ventOutputErrorSub = this.ventOutputStore.pipe(\n      select(fromVentOutputSelectors.selectVentOutputError)\n    ).subscribe(ventOutputError => {\n      this.ventOutputError = ventOutputError;\n    });\n\n  }\n\n  unsubscribeVentOutputStateObservables() {\n\n    if (this.ventOutputSub) {\n      this.ventOutputSub.unsubscribe();\n    }\n    if (this.ventOutputLoadingSub){\n      this.ventOutputLoadingSub.unsubscribe();\n    }\n    if (this.ventOutputSuccessSub){\n      this.ventOutputSuccessSub.unsubscribe();\n    }\n    if (this.ventOutputErrorSub){\n      this.ventOutputErrorSub.unsubscribe();\n    }\n\n  }\n\n\n  ngAfterViewInit() {\n    document.dispatchEvent(new Event('deviceready'))\n  }\n\n  ngAfterContentInit() {\n  }\n\n  ngOnDestroy() {\n    // unsubscribe to vent output state\n    this.unsubscribeVentOutputStateObservables();\n  }\n\n  startScan(){\n\n  }\n\n}\n","\n<div>\n  <mat-card class=\"card\">\n    <mat-card-header>\n<!--      <mat-card-title>Devices:</mat-card-title>-->\n    </mat-card-header>\n    <mat-card-content>\n      <p *ngFor=\"let device of this.devices\">\n        <mat-label>{{device.name}}</mat-label>\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button>Scan QR</button>\n      <button mat-button (click)=\"this.startScan()\">Scan BT</button>\n      <button mat-button>History</button>\n    </mat-card-actions>\n  </mat-card>\n\n</div>\n\n\n\n<!--<div>-->\n\n<!--  <h3>Panel:</h3>-->\n<!--  <br/>-->\n\n<!--  &lt;!&ndash; Vent Output &ndash;&gt;-->\n<!--  <mat-label>-->\n<!--    <h4>Vent Output:</h4>-->\n<!--  </mat-label>-->\n<!--  BPM: {{ventOutput.bpm}}-->\n<!--  <br/>-->\n<!--  Pressure Absolute: {{ventOutput.pressureAbsolute}}-->\n<!--  <br/>-->\n<!--  Compression Percentage: {{ventOutput.compressionPercentage}}-->\n<!--  <br/>-->\n<!--  Inspirium Pressure: {{ventOutput.inspiriumPressure}}-->\n<!--  <hr/>-->\n\n<!--  &lt;!&ndash; Loading &ndash;&gt;-->\n<!--  <mat-label>-->\n<!--    <h4>Loading</h4>-->\n<!--  </mat-label>-->\n<!--  <br/>-->\n<!--  {{ventOutputLoading ? 'Loading is true' : 'Loading is false'}}-->\n<!--  <hr/>-->\n\n<!--  &lt;!&ndash; Success &ndash;&gt;-->\n<!--  <mat-label>-->\n<!--    <h4>Success:</h4>-->\n<!--  </mat-label>-->\n<!--  <br/>-->\n<!--  {{ventOutputSuccess ? ventOutputSuccess.defaultMessage : 'There is no success message'}}-->\n<!--  <hr/>-->\n\n<!--  &lt;!&ndash; Loading &ndash;&gt;-->\n<!--  <mat-label>-->\n<!--    <h4>Error:</h4>-->\n<!--  </mat-label>-->\n<!--  <br/>-->\n<!--  {{ventOutputError ? ventOutputError.defaultMessage : 'There is no error message'}}-->\n\n<!--</div>-->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-vent-output',\n  templateUrl: './vent-output.component.html',\n  styleUrls: ['./vent-output.component.css']\n})\nexport class VentOutputComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-12\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {VentOutputRoutingModule} from './vent-output.routing.module';\nimport {MaterialModule} from '../app-material.module';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {VentOutputComponent} from './vent-output.component';\nimport {VentOutputPanelComponent} from './vent-output-panel/vent-output-panel.component';\nimport {SharedModule} from '../shared/shared.module';\nimport {StoreModule} from '@ngrx/store';\nimport {EffectsModule} from '@ngrx/effects';\nimport {VentOutputEffects} from './store/vent-output.effects';\nimport {ventOutputReducer} from './store/vent-output.reducer';\nimport {VENT_OUTPUT_STORE_KEY} from './constants/vent-output.constants';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    FlexLayoutModule,\n    VentOutputRoutingModule,\n    MaterialModule,\n    StoreModule.forFeature(VENT_OUTPUT_STORE_KEY, ventOutputReducer),\n    EffectsModule.forFeature([VentOutputEffects])\n  ],\n  exports: [\n    VentOutputPanelComponent\n  ],\n  declarations: [\n    VentOutputComponent,\n    VentOutputPanelComponent\n  ]\n})\n\nexport class VentOutputModule {}\n","import { NgModule } from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {VentOutputComponent} from './vent-output.component';\r\nimport {VentOutputPanelComponent} from './vent-output-panel/vent-output-panel.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: VentOutputComponent,\r\n    children: [\r\n      { path: '',\r\n        component: VentOutputPanelComponent,\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class VentOutputRoutingModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}