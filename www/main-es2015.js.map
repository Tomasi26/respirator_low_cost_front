{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-material.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/bluetooth-services/ble-scan.service.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/shared/shared.module.ts","./src/app/store/app.reducer.ts","./src/app/vent-output/constants/vent-output.constants.ts","./src/app/vent-output/service/vent-output.service.ts","./src/app/vent-output/store/vent-output.actions.ts","./src/app/vent-output/store/vent-output.effects.ts","./src/app/vent-output/store/vent-output.reducer.ts","./src/app/vent-output/store/vent-output.selectors.ts","./src/app/vent-output/store/vent-output.state.ts","./src/app/vent-output/vent-output-panel/vent-output-panel.component.ts","./src/app/vent-output/vent-output-panel/vent-output-panel.component.html","./src/app/vent-output/vent-output.component.ts","./src/app/vent-output/vent-output.component.html","./src/app/vent-output/vent-output.module.ts","./src/app/vent-output/vent-output.routing.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\n\r\n\r\nconst material = [\r\n  // DragDropModule,\r\n  // CdkTableModule,\r\n  // CdkTreeModule,\r\n  MatAutocompleteModule,\r\n  // MatBadgeModule,\r\n  // MatBottomSheetModule,\r\n  MatButtonModule,\r\n  // MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  // MatStepperModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  // MatDividerModule,\r\n  // MatExpansionModule,\r\n  // MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  // MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  // MatProgressBarModule,\r\n  // MatProgressSpinnerModule,\r\n  // MatRadioModule,\r\n  // MatRippleModule,\r\n  MatSelectModule,\r\n  // MatSidenavModule,\r\n  // MatSliderModule,\r\n  // MatSlideToggleModule,\r\n  // MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  // MatTreeModule,\r\n  MatFormFieldModule,\r\n  MatCardModule,\r\n  FlexLayoutModule,\r\n  MatMenuModule\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    material\r\n  ],\r\n\r\n  exports: [\r\n    material\r\n  ]\r\n})\r\nexport class MaterialModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot([\r\n      { path: '', redirectTo: '/vent', pathMatch: 'full' },\r\n      { path: 'admin', loadChildren: './admin/admin.module#AdminModule'}\r\n      ],\r\n      {onSameUrlNavigation: 'reload',\r\n        useHash: true}\r\n    )\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Store} from '@ngrx/store';\r\n\r\nimport * as fromApp from './store/app.reducer';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { environment } from '../environments/environment';\r\n\r\nimport {StoreModule} from '@ngrx/store';\r\nimport {EffectsModule} from '@ngrx/effects';\r\nimport {StoreRouterConnectingModule} from '@ngrx/router-store';\r\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\r\nimport * as fromApp from './store/app.reducer';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport { MaterialModule } from './app-material.module';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport {SharedModule} from './shared/shared.module';\r\nimport {VentOutputModule} from './vent-output/vent-output.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    VentOutputModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    StoreModule.forRoot(fromApp.appReducer),\r\n    EffectsModule.forRoot([]),\r\n    StoreDevtoolsModule.instrument({ logOnly: environment.production }),\r\n    StoreRouterConnectingModule.forRoot(),\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BleScanService {\n\n  constructor() { }\n\n  init() {\n    console.log('4444')\n    document.addEventListener('deviceready', () => {\n      new Promise((resolve) => {\n        console.log('H');\n        bluetoothle.initialize(resolve, {request: true, statusReceiver: false});\n        console.log('hh')\n      }).then(this.initializeSuccess, this.handleError);\n\n    });\n  }\n\n  initializeSuccess(result){\n    if (result.status === 'enabled') {\n\n      console.log('Bluetooth is enabled.');\n      console.log(result);\n    }\n\n    else {\n\n      // document.getElementById('start-scan').disabled = true;\n\n      console.log('Bluetooth is not enabled:', 'status');\n      console.log(result, 'status');\n    }\n  }\n  handleError(error) {\n    let msg;\n    if (error.error && error.message) {\n      const errorItems = [];\n      if (error.service) {\n        // errorItems.push('service: ' + (uuids[error.service] || error.service));\n      }\n      if (error.characteristic) {\n        // errorItems.push('characteristic: ' + (uuids[error.characteristic] || error.characteristic));\n      }\n      msg = 'Error on ' + error.error + ': ' + error.message + (errorItems.length && (' (' + errorItems.join(', ') + ')'));\n    }\n    else {\n      msg = error;\n    }\n    console.log(msg, 'error');\n    if (error.error === 'read' && error.service && error.characteristic) {\n      // reportValue(error.service, error.characteristic, 'Error: ' + error.message);\n    }\n  }\n\n\n  private foundDevices = [];\n\n  startScan() {\n\n    console.log(\"Starting scan for devices...\", \"status\");\n\n    this.foundDevices = [];\n\n    document.getElementById(\"devices\").innerHTML = \"\";\n    document.getElementById(\"services\").innerHTML = \"\";\n    document.getElementById(\"output\").innerHTML = \"\";\n\n    // if (window.cordova.platformId === \"windows\") {\n    //   bluetoothle.retrieveConnected(this.retrieveConnectedSuccess, this.handleError, {});\n    // }\n    // else {\n    //   bluetoothle.startScan(this.startScanSuccess, this.handleError, { services: [] });\n    // }\n  }\n\n  retrieveConnectedSuccess(result) {\n    console.log(\"retrieveConnectedSuccess()\");\n    console.log(result);\n    result.forEach(function (device) {\n      this.addDevice(device.name, device.address);\n    });\n  }\n\n  addDevice(name, address) {\n\n    let button = document.createElement(\"button\");\n    button.style.width = \"100%\";\n    button.style.padding = \"10px\";\n    button.style.fontSize = \"16px\";\n    button.textContent = name + \": \" + address;\n\n    button.addEventListener(\"click\", function () {\n\n      document.getElementById(\"services\").innerHTML = \"\";\n      // connect(address);\n    });\n\n    document.getElementById(\"devices\").appendChild(button);\n  }\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n}\r\n","<mat-toolbar class=\"flex-container\">\r\n  <div id=\"logo-group\" routerLink=\"/admin/vent\">\r\n    <h4>AmbuVent</h4>\r\n  </div>\r\n\r\n  <!-- This fills the remaining space of the current row -->\r\n  <span class=\"example-fill-remaining-space\"></span>\r\n</mat-toolbar>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    CommonModule,\n  ]\n})\nexport class SharedModule {}\n","import { ActionReducerMap } from '@ngrx/store';\n\n// tslint:disable-next-line:no-empty-interface\nexport interface AppState {\n}\n\nexport const appReducer: ActionReducerMap<AppState> = {\n};\n","export const VENT_OUTPUT_STORE_KEY = '/vent-output';\r\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  VentOutputParams,\n  VentOutputResponse\n} from '../interfaces/vent-output.interfaces';\nimport {VentOutput} from '../model/vent-output.model';\nimport {of, throwError} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VentOutputService {\n\n  constructor() {}\n\n  public getVentOutput(params: VentOutputParams): Observable<VentOutputResponse> {\n\n    const dummyVentOutput: VentOutput = {\n      bpm: 'BPM',\n      compressionPercentage: 'COMPRESSION_PERCENTAGE',\n      pressureAbsolute: 'PRESSURE_ABSOLUTE',\n      inspiriumPressure: 'INSPIRIUM_PRESSURE'\n    };\n\n    const dummyVentOutputResponse: VentOutputResponse = {\n      output: dummyVentOutput\n    };\n\n    return of(dummyVentOutputResponse);\n  }\n\n}\n","import { Action } from '@ngrx/store';\n\nimport { VentOutput } from '../model/vent-output.model';\nimport {VentOutputParams, VentOutputResponse} from '../interfaces/vent-output.interfaces';\nimport {Message} from '../../messages/message.model';\n\n// vent output\nexport const FETCH_VENT_OUTPUT = '[VentOutput] Fetch VentOutput';\nexport const SET_VENT_OUTPUT = '[VentOutput] Set VentOutput';\nexport const VENT_OUTPUT_FAILURE = '[VentOutput] VentOutput Failure';\nexport const VENT_OUTPUT_SUCCESS = '[VentOutput] VentOutput Success';\nexport const VENT_OUTPUT_CLEAN = '[VentOutput] VentOutput Clean';\nexport const VENT_OUTPUT_DUMMY = '[VentOutput] VentOutput Dummy';\n\n// vent output actions\nexport class FetchVentOutput implements Action {\n  readonly type = FETCH_VENT_OUTPUT;\n\n  constructor(public payload: {\n    params: VentOutputParams\n  }) {}\n}\n\nexport class SetVentOutput implements Action {\n  readonly type = SET_VENT_OUTPUT;\n\n  constructor(public payload: {\n    output: VentOutput\n  }) {}\n}\n\nexport class VentOutputFailure implements Action {\n  readonly type = VENT_OUTPUT_FAILURE;\n\n  constructor(public payload: {errorMessage: Message}) {}\n}\n\nexport class VentOutputSuccess implements Action {\n  readonly type = VENT_OUTPUT_SUCCESS;\n\n  constructor(public payload: {successMessage: Message}) {}\n}\n\nexport class VentOutputClean implements Action {\n  readonly type = VENT_OUTPUT_CLEAN;\n}\n\n// dummy\nexport class VentOutputDummy implements Action {\n  readonly type = VENT_OUTPUT_DUMMY;\n}\n\nexport type VentOutputActions =\n    | FetchVentOutput\n    | SetVentOutput\n    | VentOutputFailure\n    | VentOutputSuccess\n    | VentOutputClean\n    | VentOutputDummy\n  ;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {switchMap, map, catchError} from 'rxjs/operators';\n\nimport * as VentOutputActions from './vent-output.actions';\nimport * as fromApp from '../../store/app.reducer';\nimport {of, throwError} from 'rxjs';\nimport {VentOutputService} from '../service/vent-output.service';\nimport {\n  VentOutputResponse,\n  VentOutputParams\n} from '../interfaces/vent-output.interfaces';\n\n\n@Injectable()\nexport class VentOutputEffects {\n\n  // read\n  @Effect()\n  fetchVentOutput = this.actions$.pipe(\n    ofType(VentOutputActions.FETCH_VENT_OUTPUT),\n    switchMap((fetchVentOutputData: VentOutputActions.FetchVentOutput) => {\n\n      return this.ventOutputService.getVentOutput(fetchVentOutputData.payload.params)\n        .pipe(\n          switchMap((ventOutputResponse: VentOutputResponse) => {\n\n            if (ventOutputResponse.output) {\n              return of(ventOutputResponse.output);\n            } else {\n              return throwError('Error Getting Vent Output');\n            }\n          }),\n          map(ventOutput => {\n            return new VentOutputActions.SetVentOutput({\n              output: ventOutput\n            });\n          }),\n          catchError(errorRes => {\n            return this.handleVentOutputError(errorRes);\n          })\n        );\n    })\n  );\n\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<fromApp.AppState>,\n    private ventOutputService: VentOutputService\n  ) {}\n\n\n  private handleVentOutputError(error: any) {\n    return of(new VentOutputActions.VentOutputFailure({\n      errorMessage: error\n    }));\n  }\n\n}\n","import * as VentOutputActions from './vent-output.actions';\nimport { initialState, VentOutputState } from './vent-output.state';\n\n\nexport function ventOutputReducer(state = initialState, action: VentOutputActions.VentOutputActions) {\n  switch (action.type) {\n    case VentOutputActions.FETCH_VENT_OUTPUT:\n      return {\n        ...state,\n        ventOutput: null,\n        ventOutputLoading: true,\n        ventOutputError: null,\n        ventOutputSuccess: null\n      };\n    case VentOutputActions.SET_VENT_OUTPUT:\n      return {\n        ...state,\n        ventOutput: action.payload.output,\n        ventOutputLoading: false,\n        ventOutputError: null,\n        ventOutputSuccess: null\n      };\n    case VentOutputActions.VENT_OUTPUT_FAILURE:\n      return {\n        ...state,\n        ventOutputLoading: false,\n        ventOutputError: action.payload.errorMessage,\n        ventOutputSuccess: null\n      };\n    case VentOutputActions.VENT_OUTPUT_SUCCESS:\n      return {\n        ...state,\n        ventOutputLoading: false,\n        ventOutputError: null,\n        ventOutputSuccess: action.payload.successMessage\n      };\n    case VentOutputActions.VENT_OUTPUT_CLEAN:\n      return {\n        ...state,\n        ventOutput: null,\n        ventOutputLoading: false,\n        ventOutputError: null,\n        ventOutputSuccess: null\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  createFeatureSelector,\n  createSelector,\n  MemoizedSelector\n} from '@ngrx/store';\nimport {VentOutputState} from './vent-output.state';\nimport {VENT_OUTPUT_STORE_KEY} from '../constants/vent-output.constants';\nimport {Message} from '../../messages/message.model';\nimport {VentOutput} from '../model/vent-output.model';\n\n// vent output selectors helpers\nconst getVentOutput = (state: VentOutputState): VentOutput => state.ventOutput;\n\nconst getVentOutputLoading = (state: VentOutputState): boolean => state.ventOutputLoading;\n\nconst getVentOutputSuccess = (state: VentOutputState): Message => state.ventOutputSuccess;\n\nconst getVentOutputError = (state: VentOutputState): Message => state.ventOutputError;\n\n// vent output feature selectors\nexport const selectVentOutputStateFeatureState: MemoizedSelector<\n  object,\n  VentOutputState\n  > = createFeatureSelector<VentOutputState>(VENT_OUTPUT_STORE_KEY);\n\n// vent output selectors\nexport const selectVentOutput: MemoizedSelector<\n  object,\n  VentOutput\n  > = createSelector(\n  selectVentOutputStateFeatureState,\n  getVentOutput\n);\n\nexport const selectVentOutputLoading: MemoizedSelector<\n  object,\n  boolean\n  > = createSelector(\n  selectVentOutputStateFeatureState,\n  getVentOutputLoading\n);\n\nexport const selectVentOutputSuccess: MemoizedSelector<\n  object,\n  Message\n  > = createSelector(\n  selectVentOutputStateFeatureState,\n  getVentOutputSuccess\n);\n\nexport const selectVentOutputError: MemoizedSelector<\n  object,\n  Message\n  > = createSelector(\n  selectVentOutputStateFeatureState,\n  getVentOutputError\n);\n","import {VentOutput} from '../model/vent-output.model';\nimport {Message} from '../../messages/message.model';\n\nexport interface VentOutputState {\n  ventOutput: VentOutput;\n  ventOutputLoading: boolean;\n  ventOutputError: Message;\n  ventOutputSuccess: Message;\n}\n\nexport const initialState: VentOutputState = {\n  ventOutput: null,\n  ventOutputLoading: false,\n  ventOutputError: null,\n  ventOutputSuccess: null\n};\n","// core\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\n\n// router\nimport {ActivatedRoute, Router} from '@angular/router';\n\n// store\nimport {select, Store} from '@ngrx/store';\nimport * as fromApp from '../../store/app.reducer';\nimport * as fromVentOutputState from '../store/vent-output.state';\nimport * as fromVentOutputActions from '../store/vent-output.actions';\nimport * as fromVentOutputSelectors from '../store/vent-output.selectors';\n\n// rxjs\nimport {Subscription} from 'rxjs';\n\n// vent output\nimport {VentOutput} from '../model/vent-output.model';\n\n// message\nimport {Message} from '../../messages/message.model';\nimport {BleScanService} from '../../bluetooth-services/ble-scan.service';\n\n// tslint:disable-next-line:component-class-suffix\nclass Device{\n  name: string;\n  constructor(name: string) {\n    this.name = name;\n  }\n}\n\n\n@Component({\n  selector: 'app-vent-output-panel',\n  styleUrls: ['vent-output-panel.component.scss'],\n  templateUrl: 'vent-output-panel.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class VentOutputPanelComponent implements OnInit, AfterViewInit, AfterContentInit, OnDestroy {\n\n\n  // vent output store\n  ventOutput: VentOutput;\n  ventOutputLoading = false;\n  ventOutputError: Message = null;\n  ventOutputSuccess: Message = null;\n  ventOutputSub: Subscription;\n  ventOutputLoadingSub: Subscription;\n  ventOutputErrorSub: Subscription;\n  ventOutputSuccessSub: Subscription;\n  devices: Device[] = [];\n\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private store: Store<fromApp.AppState>,\n    private ventOutputStore: Store<fromVentOutputState.VentOutputState>,\n    private bleService: BleScanService) {\n\n    this.devices.push(new Device('Tomer\\'s Phone'));\n  }\n\n\n  ngOnInit() {\n    //init bluetooth module\n    this.bleService.init();\n\n    // document.dispatchEvent(new Event('deviceready'));\n\n    // subscribe to vent output state\n    this.subscribeVentOutputStateObservables();\n\n    // setting example values for the vent outputs\n    this.store.dispatch(new fromVentOutputActions.SetVentOutput({\n      output: {\n        bpm: 'BPM',\n        pressureAbsolute: 'PRESSURE_ABSOLUTE',\n        compressionPercentage: 'COMPRESSION_PERCENTAGE',\n        inspiriumPressure: 'INSPIRIUM_PRESSURE'\n      }\n    }));\n  }\n\n  // vent output state\n  subscribeVentOutputStateObservables() {\n\n    // vent output\n    this.ventOutputSub = this.ventOutputStore.pipe(\n      select(fromVentOutputSelectors.selectVentOutput)\n    ).subscribe(ventOutput => {\n      this.ventOutput = ventOutput;\n    });\n\n    // loading\n    this.ventOutputLoadingSub = this.ventOutputStore.pipe(\n      select(fromVentOutputSelectors.selectVentOutputLoading)\n    ).subscribe(ventOutputLoading => {\n      this.ventOutputLoading = ventOutputLoading;\n    });\n\n    // success message\n    this.ventOutputSuccessSub = this.ventOutputStore.pipe(\n      select(fromVentOutputSelectors.selectVentOutputSuccess)\n    ).subscribe(ventOutputSuccess => {\n      this.ventOutputSuccess = ventOutputSuccess;\n    });\n\n    // error message\n    this.ventOutputErrorSub = this.ventOutputStore.pipe(\n      select(fromVentOutputSelectors.selectVentOutputError)\n    ).subscribe(ventOutputError => {\n      this.ventOutputError = ventOutputError;\n    });\n\n  }\n\n  unsubscribeVentOutputStateObservables() {\n\n    if (this.ventOutputSub) {\n      this.ventOutputSub.unsubscribe();\n    }\n    if (this.ventOutputLoadingSub){\n      this.ventOutputLoadingSub.unsubscribe();\n    }\n    if (this.ventOutputSuccessSub){\n      this.ventOutputSuccessSub.unsubscribe();\n    }\n    if (this.ventOutputErrorSub){\n      this.ventOutputErrorSub.unsubscribe();\n    }\n\n  }\n\n\n  ngAfterViewInit() {\n    document.dispatchEvent(new Event('deviceready'))\n  }\n\n  ngAfterContentInit() {\n  }\n\n  ngOnDestroy() {\n    // unsubscribe to vent output state\n    this.unsubscribeVentOutputStateObservables();\n  }\n\n  startScan(){\n\n  }\n\n}\n","\n<div>\n  <mat-card class=\"card\">\n    <mat-card-header>\n<!--      <mat-card-title>Devices:</mat-card-title>-->\n    </mat-card-header>\n    <mat-card-content>\n      <p *ngFor=\"let device of this.devices\">\n        <mat-label>{{device.name}}</mat-label>\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button>Scan QR</button>\n      <button mat-button (click)=\"this.startScan()\">Scan BT</button>\n      <button mat-button>History</button>\n    </mat-card-actions>\n  </mat-card>\n\n</div>\n\n\n\n<!--<div>-->\n\n<!--  <h3>Panel:</h3>-->\n<!--  <br/>-->\n\n<!--  &lt;!&ndash; Vent Output &ndash;&gt;-->\n<!--  <mat-label>-->\n<!--    <h4>Vent Output:</h4>-->\n<!--  </mat-label>-->\n<!--  BPM: {{ventOutput.bpm}}-->\n<!--  <br/>-->\n<!--  Pressure Absolute: {{ventOutput.pressureAbsolute}}-->\n<!--  <br/>-->\n<!--  Compression Percentage: {{ventOutput.compressionPercentage}}-->\n<!--  <br/>-->\n<!--  Inspirium Pressure: {{ventOutput.inspiriumPressure}}-->\n<!--  <hr/>-->\n\n<!--  &lt;!&ndash; Loading &ndash;&gt;-->\n<!--  <mat-label>-->\n<!--    <h4>Loading</h4>-->\n<!--  </mat-label>-->\n<!--  <br/>-->\n<!--  {{ventOutputLoading ? 'Loading is true' : 'Loading is false'}}-->\n<!--  <hr/>-->\n\n<!--  &lt;!&ndash; Success &ndash;&gt;-->\n<!--  <mat-label>-->\n<!--    <h4>Success:</h4>-->\n<!--  </mat-label>-->\n<!--  <br/>-->\n<!--  {{ventOutputSuccess ? ventOutputSuccess.defaultMessage : 'There is no success message'}}-->\n<!--  <hr/>-->\n\n<!--  &lt;!&ndash; Loading &ndash;&gt;-->\n<!--  <mat-label>-->\n<!--    <h4>Error:</h4>-->\n<!--  </mat-label>-->\n<!--  <br/>-->\n<!--  {{ventOutputError ? ventOutputError.defaultMessage : 'There is no error message'}}-->\n\n<!--</div>-->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-vent-output',\n  templateUrl: './vent-output.component.html',\n  styleUrls: ['./vent-output.component.css']\n})\nexport class VentOutputComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-12\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {VentOutputRoutingModule} from './vent-output.routing.module';\nimport {MaterialModule} from '../app-material.module';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {VentOutputComponent} from './vent-output.component';\nimport {VentOutputPanelComponent} from './vent-output-panel/vent-output-panel.component';\nimport {SharedModule} from '../shared/shared.module';\nimport {StoreModule} from '@ngrx/store';\nimport {EffectsModule} from '@ngrx/effects';\nimport {VentOutputEffects} from './store/vent-output.effects';\nimport {ventOutputReducer} from './store/vent-output.reducer';\nimport {VENT_OUTPUT_STORE_KEY} from './constants/vent-output.constants';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    FlexLayoutModule,\n    VentOutputRoutingModule,\n    MaterialModule,\n    StoreModule.forFeature(VENT_OUTPUT_STORE_KEY, ventOutputReducer),\n    EffectsModule.forFeature([VentOutputEffects])\n  ],\n  exports: [\n    VentOutputPanelComponent\n  ],\n  declarations: [\n    VentOutputComponent,\n    VentOutputPanelComponent\n  ]\n})\n\nexport class VentOutputModule {}\n","import { NgModule } from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {VentOutputComponent} from './vent-output.component';\r\nimport {VentOutputPanelComponent} from './vent-output-panel/vent-output-panel.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: VentOutputComponent,\r\n    children: [\r\n      { path: '',\r\n        component: VentOutputPanelComponent,\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class VentOutputRoutingModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}